<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.chinesemedicinesalessystem.Imapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.example.chinesemedicinesalessystem.entity.Order" >
    <id column="orderid" property="orderid" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="receiveid" property="receiveid" jdbcType="BIGINT" />
    <result column="payment" property="payment" jdbcType="DECIMAL" />
    <result column="freight" property="freight" jdbcType="DECIMAL" />
    <result column="express
id" property="express
id" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="patmenttime" property="patmenttime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderid, userid, receiveid, payment, freight, express
id, status, patmenttime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.chinesemedicinesalessystem.entity.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from order
    where orderid = #{orderid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from order
    where orderid = #{orderid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.chinesemedicinesalessystem.entity.OrderExample" >
    delete from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.chinesemedicinesalessystem.entity.Order" >
    insert into order (orderid, userid, receiveid, 
      payment, freight, express
id, 
      status, patmenttime)
    values (#{orderid,jdbcType=VARCHAR}, #{userid,jdbcType=BIGINT}, #{receiveid,jdbcType=BIGINT}, 
      #{payment,jdbcType=DECIMAL}, #{freight,jdbcType=DECIMAL}, #{express
id,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{patmenttime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.chinesemedicinesalessystem.entity.Order" >
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="receiveid != null" >
        receiveid,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="freight != null" >
        freight,
      </if>
      <if test="express
id != null" >
        express
id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="patmenttime != null" >
        patmenttime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="receiveid != null" >
        #{receiveid,jdbcType=BIGINT},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="freight != null" >
        #{freight,jdbcType=DECIMAL},
      </if>
      <if test="express
id != null" >
        #{express
id,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="patmenttime != null" >
        #{patmenttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.chinesemedicinesalessystem.entity.OrderExample" resultType="java.lang.Integer" >
    select count(*) from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order
    <set >
      <if test="record.orderid != null" >
        orderid = #{record.orderid,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.receiveid != null" >
        receiveid = #{record.receiveid,jdbcType=BIGINT},
      </if>
      <if test="record.payment != null" >
        payment = #{record.payment,jdbcType=DECIMAL},
      </if>
      <if test="record.freight != null" >
        freight = #{record.freight,jdbcType=DECIMAL},
      </if>
      <if test="record.express
id != null" >
        express
id = #{record.express
id,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.patmenttime != null" >
        patmenttime = #{record.patmenttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order
    set orderid = #{record.orderid,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=BIGINT},
      receiveid = #{record.receiveid,jdbcType=BIGINT},
      payment = #{record.payment,jdbcType=DECIMAL},
      freight = #{record.freight,jdbcType=DECIMAL},
      express
id = #{record.express
id,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      patmenttime = #{record.patmenttime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.chinesemedicinesalessystem.entity.Order" >
    update order
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="receiveid != null" >
        receiveid = #{receiveid,jdbcType=BIGINT},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="freight != null" >
        freight = #{freight,jdbcType=DECIMAL},
      </if>
      <if test="express
id != null" >
        express
id = #{express
id,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="patmenttime != null" >
        patmenttime = #{patmenttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where orderid = #{orderid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.chinesemedicinesalessystem.entity.Order" >
    update order
    set userid = #{userid,jdbcType=BIGINT},
      receiveid = #{receiveid,jdbcType=BIGINT},
      payment = #{payment,jdbcType=DECIMAL},
      freight = #{freight,jdbcType=DECIMAL},
      express
id = #{express
id,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      patmenttime = #{patmenttime,jdbcType=TIMESTAMP}
    where orderid = #{orderid,jdbcType=VARCHAR}
  </update>
</mapper>