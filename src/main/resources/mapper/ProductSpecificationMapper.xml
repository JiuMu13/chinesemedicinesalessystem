<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.chinesemedicinesalessystem.Imapper.ProductSpecificationMapper" >
  <resultMap id="BaseResultMap" type="com.example.chinesemedicinesalessystem.entity.ProductSpecification" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="proid" property="proid" jdbcType="BIGINT" />
    <result column="specification" property="specification" jdbcType="VARCHAR" />
    <result column="mainimage" property="mainimage" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="saleprice" property="saleprice" jdbcType="DECIMAL" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, proid, specification, mainimage, price, saleprice, stock, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.chinesemedicinesalessystem.entity.ProductSpecificationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_specification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from product_specification
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from product_specification
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.chinesemedicinesalessystem.entity.ProductSpecificationExample" >
    delete from product_specification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.chinesemedicinesalessystem.entity.ProductSpecification" >
    insert into product_specification (id, proid, specification, 
      mainimage, price, saleprice, 
      stock, status)
    values (#{id,jdbcType=BIGINT}, #{proid,jdbcType=BIGINT}, #{specification,jdbcType=VARCHAR}, 
      #{mainimage,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{saleprice,jdbcType=DECIMAL}, 
      #{stock,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.chinesemedicinesalessystem.entity.ProductSpecification" >
    insert into product_specification
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="proid != null" >
        proid,
      </if>
      <if test="specification != null" >
        specification,
      </if>
      <if test="mainimage != null" >
        mainimage,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="saleprice != null" >
        saleprice,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="proid != null" >
        #{proid,jdbcType=BIGINT},
      </if>
      <if test="specification != null" >
        #{specification,jdbcType=VARCHAR},
      </if>
      <if test="mainimage != null" >
        #{mainimage,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="saleprice != null" >
        #{saleprice,jdbcType=DECIMAL},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.chinesemedicinesalessystem.entity.ProductSpecificationExample" resultType="java.lang.Integer" >
    select count(*) from product_specification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product_specification
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.proid != null" >
        proid = #{record.proid,jdbcType=BIGINT},
      </if>
      <if test="record.specification != null" >
        specification = #{record.specification,jdbcType=VARCHAR},
      </if>
      <if test="record.mainimage != null" >
        mainimage = #{record.mainimage,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.saleprice != null" >
        saleprice = #{record.saleprice,jdbcType=DECIMAL},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product_specification
    set id = #{record.id,jdbcType=BIGINT},
      proid = #{record.proid,jdbcType=BIGINT},
      specification = #{record.specification,jdbcType=VARCHAR},
      mainimage = #{record.mainimage,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      saleprice = #{record.saleprice,jdbcType=DECIMAL},
      stock = #{record.stock,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.chinesemedicinesalessystem.entity.ProductSpecification" >
    update product_specification
    <set >
      <if test="proid != null" >
        proid = #{proid,jdbcType=BIGINT},
      </if>
      <if test="specification != null" >
        specification = #{specification,jdbcType=VARCHAR},
      </if>
      <if test="mainimage != null" >
        mainimage = #{mainimage,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="saleprice != null" >
        saleprice = #{saleprice,jdbcType=DECIMAL},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.chinesemedicinesalessystem.entity.ProductSpecification" >
    update product_specification
    set proid = #{proid,jdbcType=BIGINT},
      specification = #{specification,jdbcType=VARCHAR},
      mainimage = #{mainimage,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      saleprice = #{saleprice,jdbcType=DECIMAL},
      stock = #{stock,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>